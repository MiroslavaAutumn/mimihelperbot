import telebot
import const
import weather
import logging
import bot_answers
import translator

bot = telebot.TeleBot(const.botAPI)

# start debug log
logging.basicConfig(filename='log_weather.log', level=logging.DEBUG)
logging.debug('current_weather')

##### KEYBOARDS #####
keyboard1 = telebot.types.ReplyKeyboardMarkup(False, True)
keyboard1.row('–ü–æ–≥–æ–¥–∞', '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫')
keyboard2 = telebot.types.ReplyKeyboardMarkup(False, True)
keyboard2.row('–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç –ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–û—Ç–º–µ–Ω–∞')
keyboard3 = telebot.types.ReplyKeyboardMarkup(False, True)
keyboard3.row('–î–∞', '–ù–µ—Ç')
ruen = '–° üá∑üá∫ –Ω–∞ üá∫üá∏'
enru = '–° üá∫üá∏ –Ω–∞ üá∑üá∫'
keyboard4 = telebot.types.ReplyKeyboardMarkup(False, True)
keyboard4.row(ruen, enru)


##### TRANSLATOR #####
@bot.message_handler(commands=['translator'])
def get_translation(message):
    msg = bot.send_message(message.chat.id, bot_answers.select_lang_message, reply_markup=keyboard4
                           )
    bot.register_next_step_handler(msg, choose_lang_trans)
    print(msg)

def choose_lang_trans(message):
    src = ''
    dst = ''
    if message.text == enru:
        src = 'en'
        dst = 'ru'
    elif message.text == ruen:
        src = 'ru'
        dst = 'en'

    bot.send_message(message.chat.id, bot_answers.input_text_to_translate)
    bot.register_next_step_handler(message, translate_text, src, dst)

def translate_text(message, src_lang, dest_lang):
    try:
        user_text = translator.get_translation(user_text=message.text, src_lang=src_lang, dest_lang=dest_lang
                                               )
    except Exception:
        user_text = bot_answers.translator_error_message
    bot.send_message(message.chat.id, user_text, reply_markup=keyboard1)

##### START MESSAGE #####
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, bot_answers.start_message)


##### HELP MESSAGE #####
@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, bot_answers.help_message, reply_markup=keyboard1)


##### WEATHER #####
def select_city(message):
    try:
        current_weather = weather.get_weather(city=message.text)
    except Exception:
        current_weather = bot_answers.select_city_error_message
    bot.send_message(message.chat.id, current_weather, reply_markup=keyboard1)


@bot.message_handler(commands=['get_weather'])
def get_weather(message):
    msg = bot.send_message(message.chat.id, bot_answers.select_city_message, reply_markup=keyboard2)
    bot.register_next_step_handler(msg, select_city)
    print(msg)


##### SERVICE #####
@bot.message_handler(content_types=['text'])
def send_text(message):
    print(message.text)
    if message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
        bot.send_message(message.chat.id, bot_answers.cancel_message, reply_markup=keyboard1)
    if message.text.startswith('–ü–æ–≥–æ–¥–∞'):
        get_weather(message)
    if message.text.startswith('–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫'):
        get_translation(message)


##### CHAT #####
@bot.message_handler(content_types=['text'])
def send_text(message):
    print(message.text)
    if message.text.lower() == '–ø–æ–∫–∞':
        bot.send_message(message.chat.id, '–ó–∞ –ø–æ–∫–∞ –±—å—é—Ç –≤ –±–æ–∫–∞ \U0001f600')
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –æ—Ç–≤–µ—Ç!', reply_markup=keyboard3)
    if message.text.lower() == '–¥–∞':
        bot.send_message(message.chat.id, '–ü–∏–∑–¥–∞! \U0001f600', reply_markup=keyboard1)
    if message.text.lower() == '–º–æ–∂–µ—Ç –ª–∏ —Ä–æ–±–æ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å —Å–∏–º—Ñ–æ–Ω–∏—é, —Å–¥–µ–ª–∞—Ç—å —à–µ–¥–µ–≤—Ä?':
        bot.send_message(message.chat.id, '–ú–æ–∂–µ—Ç! \U0001f600')
    if message.text.lower() == '–Ω–µ—Ç':
        bot.send_message(message.chat.id, '–ü–∏–¥–æ—Ä–∞ –æ—Ç–≤–µ—Ç! '
                                          '\U0001F468\U0000200D\U00002764\U0000FE0F\U0000200D\U0001F468',
                         reply_markup=keyboard1)


bot.polling()
