import telebot
import const
import weather

bot = telebot.TeleBot(const.botAPI)

##### START MESSAGE ####################################################################################################
@bot.message_handler(commands=['start'])
def start_command(message):
    bot.send_message(
        message.chat.id,
        '–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∏–º–∏, —è –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–∞—è! –ú–æ—è —Å–æ–∑–¥–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ @MiroslavaAutumn! '
        '\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é, –≤–≤–µ–¥–∏—Ç–µ /help! \n')


##### HELP MESSAGE #####################################################################################################
@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, '–ü–æ–∫–∞ —á—Ç–æ —è –º–æ–≥—É —Ç–æ–ª—å–∫–æ —É–∑–Ω–∞–≤–∞—Ç—å –ø–æ–≥–æ–¥—É, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å –¥–µ–ª–∞—Ç—å –¥—Ä—É–≥–∏–µ '
                                      '–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≤–µ—â–∏!\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É!', reply_markup=keyboard1)


##### KEYBOARDS ########################################################################################################
keyboard1 = telebot.types.ReplyKeyboardMarkup(False, True)
keyboard1.row('üå¶ –ü–æ–≥–æ–¥–∞ üå¶')
keyboard1.row('üí∞ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç üí∞')
keyboard1.row('üá∑üá∫ –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ üá∫üá∏')
keyboard1.row('üòÅ –ú–∏–º–∏, –ø–æ—à—É—Ç–∏! üòÅ')
########################################################################################################################
@bot.message_handler(content_types=['text'])
def send_text(message):
    print(message.text)
    if message.text.startswith('üå¶ –ü–æ–≥–æ–¥–∞ üå¶'):
        get_weather(message)
    if message.text.startswith('üá∑üá∫ –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ üá∫üá∏'):
        get_translation(message)
    if message.text.startswith('üí∞ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç üí∞'):
        get_exchange_rate(message)
    if message.text.startswith('üòÅ –ú–∏–º–∏, –ø–æ—à—É—Ç–∏! üòÅ'):
        get_joke(message)


##### WEATHER ##########################################################################################################
@bot.message_handler(commands=['get_weather'])
def get_weather(message):
    bot_msg = bot.send_message(message.chat.id,
                               '\U0001F30D –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é',
                               reply_markup=gen_weather_markup())

    def call_custom_city(user_msg):
        weather_from_city(bot_msg.chat.id, user_msg.text, bot_msg.message_id, user_msg.message_id)

    bot.register_next_step_handler(bot_msg, call_custom_city)
    print(bot_msg)


@bot.callback_query_handler(lambda call: call.data.startswith('weather'))
def callback_query_weather(call):
    city = call.data.split('|')[1]
    weather_from_city(call.message.chat.id, city, call.message.message_id, 0)
    bot.clear_step_handler_by_chat_id(call.message.chat.id)


def weather_from_city(chat_id, city, message_id_bot, message_id_user):
    # This supports cities from inline buttons
    # and also a custom city from an user message.
    try:
        current_weather = weather.get_weather(city=city)
    except Exception:
        current_weather = '\U000026D4 –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω, –∏–ª–∏ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.' \
                          '\n\n\U0001F4A1 –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥ –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ!'

    bot.edit_message_text(current_weather, chat_id, message_id_bot)
    if message_id_user != 0:
        bot.delete_message(chat_id, message_id_user)


def gen_weather_markup():
    markup = telebot.types.InlineKeyboardMarkup()

    def gen_button(city):
        return telebot.types.InlineKeyboardButton(city, callback_data='weather|' + city)

    markup.row(gen_button('–ú–æ—Å–∫–≤–∞'))
    markup.row(gen_button('–°–∞–Ω–∫—Ç –ü–µ—Ç–µ—Ä–±—É—Ä–≥'))
    markup.row(gen_button('–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥'))
    markup.row(gen_button('–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫'))
    return markup


##### EXCHANGE RATE ####################################################################################################
@bot.message_handler(commands=['er'])
def get_exchange_rate(message):
    bot.send_message(
        message.chat.id,
        '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–¥–Ω–µ–µ.')


#### TRANSLATOR ########################################################################################################
@bot.message_handler(commands=['translator'])
def get_translation(message):
    bot.send_message(
        message.chat.id,
        '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–∑–¥–Ω–µ–µ.')


##### JOKE #############################################################################################################
@bot.message_handler(commands=['joke'])
def get_joke(message):
    bot.send_message(
        message.chat.id,
        '–ö—É–ø–∏–ª –º—É–∂–∏–∫ —à–ª—è–ø—É, –∞ –æ–Ω–∞ –µ–º—É –∫–∞–∫ —Ä–∞–∑! \n\n –°–∫–æ—Ä–æ —è –Ω–∞—É—á—É—Å—Ç—å —à—É—Ç–∏—Ç—å —Å–º–µ—à–Ω–µ–µ!')


########################################################################################################################


if __name__ == '__main__':
    bot.polling(none_stop=True)
